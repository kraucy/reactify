[{"/Users/keith/work/Rivian/code/reactify/src/index.js":"1","/Users/keith/work/Rivian/code/reactify/src/aws-exports.js":"2","/Users/keith/work/Rivian/code/reactify/src/reportWebVitals.js":"3","/Users/keith/work/Rivian/code/reactify/src/App.js":"4","/Users/keith/work/Rivian/code/reactify/src/graphql/mutations.js":"5","/Users/keith/work/Rivian/code/reactify/src/graphql/queries.js":"6"},{"size":603,"mtime":1611334833313,"results":"7","hashOfConfig":"8"},{"size":734,"mtime":1611337267916,"results":"9","hashOfConfig":"8"},{"size":349,"mtime":1611337398195,"results":"10","hashOfConfig":"8"},{"size":6786,"mtime":1611337315184,"results":"11","hashOfConfig":"8"},{"size":1051,"mtime":1611337266176,"results":"12","hashOfConfig":"8"},{"size":596,"mtime":1611337266149,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"zk452s",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/keith/work/Rivian/code/reactify/src/index.js",[],["28","29","30","31","32","33"],"/Users/keith/work/Rivian/code/reactify/src/aws-exports.js",[],"/Users/keith/work/Rivian/code/reactify/src/reportWebVitals.js",[],"/Users/keith/work/Rivian/code/reactify/src/App.js",["34","35","36","37","38"],"import React, { useEffect, useState } from 'react';\nimport Amplify, { API, graphqlOperation } from 'aws-amplify';\nimport { withAuthenticator } from '@aws-amplify/ui-react';\nimport {\n\tButton,\n\tCard,\n\tCardContent,\n\tFormControlLabel,\n\tIconButton,\n\tList,\n\tListItem,\n\tListItemAvatar,\n\tListItemSecondaryAction,\n\tListItemText,\n\tSwitch,\n\tTextField,\n\tTypography,\n} from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { listTodos } from './graphql/queries';\nimport {\n\tadd, createTodo, deleteTodo, updateTodo,\n} from './graphql/mutations';\nimport awsExports from './aws-exports';\nimport './App.css';\n\nAmplify.configure(awsExports);\n\nconst initialState = { name: '', description: '' };\nconst initialNumState = { number1: 0, number2: 0 };\n\nconst styles = {\n\tcontainer: {\n\t\twidth: 500,\n\t\tmargin: '0 auto',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'center',\n\t\tpadding: 15,\n\t},\n\ttodo: {\n\t\tpadding: 15,\n\t},\n\tinput: {\n\t\tmarginBottom: 15, padding: 8, fontSize: 18,\n\t},\n\titem: {\n\t\tborderBottom: '1px solid gray',\n\t},\n\ttodoName: {\n\t\tfontSize: 20,\n\t\tfontWeight: 'bold',\n\t},\n\ttodoDescription: {\n\t\tmarginBottom: 0,\n\t},\n\tbutton: {\n\t\tfontSize: 18, padding: '15px 0px',\n\t},\n};\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tflexWrap: 'wrap',\n\t\t'& > *': {\n\t\t\tmargin: theme.spacing(1),\n\t\t\theight: theme.spacing(5),\n\t\t},\n\t},\n\tpaper: {\n\t\tmarginBottom: 15,\n\t},\n}));\n\nconst App = () => {\n\tconst [editing, setEditState] = useState(false);\n\tconst [checked, setChecked] = useState(false);\n\tconst [formState, setFormState] = useState(initialState);\n\tconst [todos, setTodos] = useState([]);\n\tconst [sum, setSum] = useState(0);\n\tconst classes = useStyles();\n\n\tfunction setInput(key, value) {\n\t\tsetFormState({ ...formState, [key]: value });\n\t}\n\n\tasync function fetchTodos() {\n\t\ttry {\n\t\t\tconst todoData = await API.graphql(graphqlOperation(listTodos));\n\t\t\tconst listOfTodos = todoData.data.listTodos.items;\n\t\t\tsetTodos(listOfTodos);\n\t\t} catch (error) {\n\t\t\tconsole.log('error fetching todos', error);\n\t\t}\n\t}\n\n\tasync function addTodo(event) {\n\t\ttry {\n\t\t\tif (!formState.name || !formState.description) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst todo = { ...formState };\n\t\t\tsetTodos([...todos, todo]);\n\t\t\tsetFormState(initialState);\n\t\t\tawait API.graphql(graphqlOperation(createTodo, { input: todo }));\n\t\t\tfetchTodos();\n\t\t} catch (error) {\n\t\t\tconsole.log('error creating todo:', error);\n\t\t}\n\t}\n\n\tasync function updateThisTodo(todo) {\n\t\tsetEditState(true);\n\t\tsetFormState({\n\t\t\tid: todo.id,\n\t\t\tname: todo.name,\n\t\t\tdescription: todo.description,\n\t\t});\n\t}\n\n\tasync function saveTodo() {\n\t\ttry {\n\t\t\tawait API.graphql(graphqlOperation(updateTodo, { input: formState }));\n\t\t\tfetchTodos();\n\t\t\tsetFormState(initialState);\n\t\t\tsetEditState(false);\n\t\t} catch (error) {\n\t\t\tconsole.log('error updating todo:', error);\n\t\t}\n\t}\n\n\tasync function removeTodo(todo) {\n\t\ttry {\n\t\t\tawait API.graphql(graphqlOperation(deleteTodo, { input: { id: todo.id } }));\n\t\t\tsetFormState(initialState);\n\t\t\tfetchTodos();\n\t\t} catch (error) {\n\t\t\tconsole.log('error deleting todo:', error);\n\t\t}\n\t}\n\n\tasync function addInputs(event) {\n\t\tevent.preventDefault();\n\t\ttry {\n\t\t\tconst numbersSum = await API.graphql(graphqlOperation(add, {\n\t\t\t\tnumber1: +formState.number1, number2: +formState.number2,\n\t\t\t}));\n\t\t\tsetSum(numbersSum.data.add);\n\t\t} catch (error) {\n\t\t\tconsole.log('error adding numbers', error);\n\t\t}\n\t}\n\n\tconst check = () => {\n\t\tsetChecked(!checked);\n\t\tif (checked) {\n\t\t\tsetFormState(initialNumState);\n\t\t\tsetSum(0);\n\t\t}\n\t\tsetFormState(initialState);\n\t};\n\n\tconst ListItems = () => (\n\t\ttodos.map((todo) => (\n\t\t\t<ListItem\n\t\t\t\tstyle={styles.item}\n\t\t\t\tkey={todo.id}\n\t\t\t>\n\t\t\t\t<ListItemText\n\t\t\t\t\tprimary={todo.name}\n\t\t\t\t\tsecondary={todo.description}\n\t\t\t\t/>\n\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\taria-label=\"delete\"\n\t\t\t\t\t\tonClick={() => updateThisTodo(todo)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CreateIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</ListItemAvatar>\n\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\taria-label=\"delete\"\n\t\t\t\t\t\tonClick={() => removeTodo(todo)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</ListItemSecondaryAction>\n\t\t\t</ListItem>\n\t\t))\n\t);\n\n\tconst ShowButtons = () => {\n\t\tif (editing) {\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tstyle={styles.button}\n\t\t\t\t\tonClick={saveTodo}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t>\n\t\t\t\t\tSave Todo\n\t\t\t\t</Button>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tstyle={styles.button}\n\t\t\t\tonClick={addTodo}\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\ttype=\"submit\"\n\t\t\t>\n\t\t\t\tCreate Todo\n\t\t\t</Button>\n\t\t);\n\t};\n\n\tuseEffect(() => {\n\t\tfetchTodos();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Card style={styles.container}>\n\t\t\t\t<h2>Amplify Example App</h2>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\tcontrol={(\n\t\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\t\tchecked={checked}\n\t\t\t\t\t\t\t\tonChange={check}\n\t\t\t\t\t\t\t\tname=\"Switch input\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'checkbox' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tlabel={`${checked ? 'Numbers' : 'List View'}`}\n\t\t\t\t\t/>\n\t\t\t\t</CardContent>\n\t\t\t\t{\n\t\t\t\t\tchecked ? (\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<form className={classes.root}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tonChange={(event) => setInput('number1', event.target.value)}\n\t\t\t\t\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\t\t\t\t\tvalue={formState.number1}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Number 1\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tonChange={(event) => setInput('number2', event.target.value)}\n\t\t\t\t\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\t\t\t\t\tvalue={formState.number2}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Number 2\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tstyle={styles.button}\n\t\t\t\t\t\t\t\t\tonClick={addInputs}\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd Values\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<form className={classes.root}>\n\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tonChange={(event) => setInput('name', event.target.value)}\n\t\t\t\t\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\t\t\t\t\tvalue={formState.name}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tonChange={(event) => setInput('description', event.target.value)}\n\t\t\t\t\t\t\t\t\tstyle={styles.input}\n\t\t\t\t\t\t\t\t\tvalue={formState.description}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Description\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ShowButtons />\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t)\n\n\t\t\t\t}\n\n\t\t\t\t<CardContent>\n\t\t\t\t\t{\n\t\t\t\t\t\tchecked\n\t\t\t\t\t\t\t? (\n\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\tThe sum is\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t{sum}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t:\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t<List dense>\n\t\t\t\t\t\t\t\t\t<ListItems />\n\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\nexport default withAuthenticator(App);\n","/Users/keith/work/Rivian/code/reactify/src/graphql/mutations.js",[],"/Users/keith/work/Rivian/code/reactify/src/graphql/queries.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":97,"column":4,"nodeType":"53","messageId":"54","endLine":97,"endColumn":15},{"ruleId":"51","severity":1,"message":"52","line":113,"column":4,"nodeType":"53","messageId":"54","endLine":113,"endColumn":15},{"ruleId":"51","severity":1,"message":"52","line":133,"column":4,"nodeType":"53","messageId":"54","endLine":133,"endColumn":15},{"ruleId":"51","severity":1,"message":"52","line":143,"column":4,"nodeType":"53","messageId":"54","endLine":143,"endColumn":15},{"ruleId":"51","severity":1,"message":"52","line":155,"column":4,"nodeType":"53","messageId":"54","endLine":155,"endColumn":15},"lines-around-directive",["55"],"no-spaced-func",["56"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements","func-call-spacing"]